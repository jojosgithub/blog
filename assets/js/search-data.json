{
  
    
        "post0": {
            "title": "GGplot Recipes",
            "content": "TOC . write a function for generating data | use of melt for rearranging data | create a base plot | add a boxplot to the base plot | add a jiiter plot to the base plot | merge boxplot and jiiter plot | add a label to selected points in the jiiter plot | use ggrepel to better visualize the label | write a function to automatically select points based on a custom filter | perform a t.test on data and use ggpubr to add brackets to a boxplot | create half-box plot | . library(ggplot2) library(gridExtra) library(data.table) library(RColorBrewer) library(ggpubr) library(rstatix, warn.conflicts = FALSE) library(ggrepel) # building a function for generating data genDataset &lt;- function(number_of_rows,means,sds) { l &lt;- length(means) res &lt;- lapply(seq(1:l),function(x) eval(parse(text=paste(&quot;rnorm(&quot;,number_of_rows,&quot;,&quot;,means[x],&quot;)&quot;,sep=&quot;&quot;)))) data.frame((sapply(res,c))) return(res) } # generating data dat &lt;- genDataset(number_of_rows=100, means=c(90,100,105), sds=c(30,20,25)) dat &lt;- data.frame((sapply(dat,c))) id &lt;- rownames(dat) dat &lt;- cbind(id=id,dat) dt &lt;- data.table(dat) # rearranging table using melt from data.table dt.melt &lt;- melt(dt, id.vars=&quot;id&quot;) colnames(dt.melt) &lt;- c(&quot;id&quot;,&quot;category&quot;,&quot;var1&quot;) #creating base plot base &lt;- ggplot(dt.melt, aes(x=category, y=var1)) + labs(title = &quot;ggplot&quot;, x = &quot;xlab&quot;, y = &quot;ylab&quot;, subtitle = &quot;subtitle&quot;, tag = &quot;a&quot;) + theme_classic(base_size = 36) + theme(legend.position = &quot;none&quot;, axis.text.x = element_text(face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;bold&quot;)) base . options(repr.plot.width = 12, repr.plot.height = 8) #adding jiitter plot pv &lt;- base + geom_jitter( position = position_jitter(0.15), alpha=0.5, size = 3) + labs(title = &quot;geom_jitter&quot;, subtitle = &quot;vertical&quot;) ph &lt;- pv + coord_flip() + labs(title = &quot;geom_jitter&quot;, subtitle = &quot;horizontal&quot;, tag = &quot;b&quot;) pvc &lt;- pv + aes(shape = category) + labs(title = &quot;geom_jitter&quot;, subtitle = &quot;vertical category&quot;, tag = &quot;c&quot;) phc &lt;- pvc + coord_flip() + labs(title = &quot;geom_jitter&quot;, subtitle = &quot;horizontal category&quot;, tag = &quot;d&quot;) # preparing plot variations according to sequential, # diverging and qualitative scheme colors using color brewer library(gridExtra) grid.arrange(pv, ph, ncol=2) grid.arrange(phc, pvc, ncol=2) . options(repr.plot.width = 12, repr.plot.height = 8) uplim &lt;- 92 lowlim &lt;- 88 #using gg_text_repel in order to better visualize the labels p2 &lt;- ph + geom_text_repel(data=dt.melt[category==&quot;X1&quot;], aes(label=ifelse(((var1 &gt; uplim | var1 &lt; lowlim )), as.character(id),&#39;&#39;)), position = position_jitter(0.2,seed = 1),size=4, ) + labs(subtitle = &quot;manual label&quot;,tag = &quot;i&quot;) # making the process automatic # creating functions to highlight data depending on n sigma or # a delta from the min and max NormTextlim &lt;- function(x, nsigma){ limup &lt;- mean(x) + nsigma*sd(x) limlow &lt;- mean(x) - nsigma*sd(x) l &lt;- list(&quot;limup&quot;=limup,&quot;limlow&quot;=limlow) return(l) } Utextlim &lt;- function(x, ndiv){ nth_div &lt;- (max(x)-min(x))/ndiv limup &lt;- max(x) - nth_div limlow &lt;- min(x) + nth_div l &lt;- list(&quot;limup&quot;=limup,&quot;limlow&quot;=limlow) return(l) } # creating a category index unique_category &lt;- unique(dt.melt$category) p3 &lt;- ph + lapply(seq(1,length(unique_category)), function(x) geom_text_repel(data=dt.melt[category==as.character(unique_category[x])], aes(label=ifelse(((var1 &gt; Utextlim((dt.melt[category==as.character(unique_category[x])])$var1,10)$limup | var1 &lt; Utextlim((dt.melt[category==as.character(unique_category[x])])$var1,10)$limlow )), as.character(id),&#39;&#39;)), position = position_jitter(0.2,seed = 1),size=4)) + labs(subtitle = &quot;auto label&quot;,tag = &quot;l&quot;) grid.arrange(p2, p3, ncol=2) . options(repr.plot.width = 6, repr.plot.height = 6) p4 &lt;- base + geom_jitter(alpha=0.1,size = 1) + geom_boxplot(alpha = 0,lwd=1) grid.arrange(p4, ncol=1) . library(gghalves) p6 &lt;- base + geom_half_point(alpha=0.1, side=&quot;l&quot;) + geom_half_boxplot(side=&quot;r&quot;) p6 . options(repr.plot.width = 6, repr.plot.height = 6) library(gghalves) p8 &lt;- base + geom_half_point(alpha=0.1, side=&quot;l&quot;) + geom_half_violin(side=&quot;r&quot;,lwd=1) p8 .",
            "url": "https://jojosgithub.github.io/blog/r/2021/05/31/ggplot_recipes.html",
            "relUrl": "/r/2021/05/31/ggplot_recipes.html",
            "date": " • May 31, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I’m a researcher at the National Research Council of Italy at the “Giulio Natta” Institute of Chemical Sciences and Technologies (Scitec-Cnr).I started to be interested in multivariate statistics techniques applied to data from physic-chemical analysis methods 15 years ago during my Ph.D. and to apply it to material science ever since. Enthusiast about programming in R and Python in order to write tools for everyday laboratory activities. FOSS advocate. Messy coder. I’ve written also a book on this topic: “Statistical and Multivariate Analysis in Material Science” that you can find here https://amzn.com/B08W8W5WSF .",
          "url": "https://jojosgithub.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jojosgithub.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}